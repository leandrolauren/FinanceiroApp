// <auto-generated />
using System;
using FinanceiroApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceiroApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250701211418_usuariopendente")]
    partial class usuariopendente
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceiroApp.Models.ContaBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Agencia")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<string>("Banco")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("DigitoAgencia")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("DigitoConta")
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("NumeroConta")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Saldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContaBancaria", (string)null);
                });

            modelBuilder.Entity("FinanceiroApp.Models.LancamentoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ContaBancariaId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCompetencia")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("LancamentoPaiId")
                        .HasColumnType("integer");

                    b.Property<bool>("Pago")
                        .HasColumnType("boolean");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PessoaModelId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanoContaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlanoContasModelId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("LancamentoPaiId");

                    b.HasIndex("PessoaId");

                    b.HasIndex("PessoaModelId");

                    b.HasIndex("PlanoContaId");

                    b.HasIndex("PlanoContasModelId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Lancamentos", (string)null);
                });

            modelBuilder.Entity("FinanceiroApp.Models.PessoaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataNascimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Numero")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tipo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Email" }, "IX_Pessoa_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "Nome" }, "IX_Pessoa_Nome");

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("FinanceiroApp.Models.PlanoContasModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlanoContasPaiId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlanoContasPaiId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex(new[] { "Descricao" }, "IX_PlanoConta_Descricao");

                    b.ToTable("PlanoConta", (string)null);
                });

            modelBuilder.Entity("FinanceiroApp.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "IX_Usuario_Email")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("UsuarioPendenteModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.ToTable("UsuarioPendente", (string)null);
                });

            modelBuilder.Entity("FinanceiroApp.Models.ContaBancaria", b =>
                {
                    b.HasOne("FinanceiroApp.Models.UsuarioModel", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroApp.Models.LancamentoModel", b =>
                {
                    b.HasOne("FinanceiroApp.Models.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinanceiroApp.Models.LancamentoModel", "LancamentoPai")
                        .WithMany("Parcelas")
                        .HasForeignKey("LancamentoPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinanceiroApp.Models.PessoaModel", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinanceiroApp.Models.PessoaModel", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("PessoaModelId");

                    b.HasOne("FinanceiroApp.Models.PlanoContasModel", "PlanoContas")
                        .WithMany()
                        .HasForeignKey("PlanoContaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FinanceiroApp.Models.PlanoContasModel", null)
                        .WithMany("Lancamentos")
                        .HasForeignKey("PlanoContasModelId");

                    b.HasOne("FinanceiroApp.Models.UsuarioModel", "Usuario")
                        .WithMany("Lancamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancaria");

                    b.Navigation("LancamentoPai");

                    b.Navigation("Pessoa");

                    b.Navigation("PlanoContas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroApp.Models.PessoaModel", b =>
                {
                    b.HasOne("FinanceiroApp.Models.UsuarioModel", "Usuario")
                        .WithMany("Pessoas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroApp.Models.PlanoContasModel", b =>
                {
                    b.HasOne("FinanceiroApp.Models.PlanoContasModel", "PlanoContasPai")
                        .WithMany("Filhos")
                        .HasForeignKey("PlanoContasPaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FinanceiroApp.Models.UsuarioModel", "Usuario")
                        .WithMany("Planos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanoContasPai");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("FinanceiroApp.Models.LancamentoModel", b =>
                {
                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("FinanceiroApp.Models.PessoaModel", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("FinanceiroApp.Models.PlanoContasModel", b =>
                {
                    b.Navigation("Filhos");

                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("FinanceiroApp.Models.UsuarioModel", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("Pessoas");

                    b.Navigation("Planos");
                });
#pragma warning restore 612, 618
        }
    }
}
